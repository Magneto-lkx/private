/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-08-30 03:05:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pagecomponent;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class passwordModification_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tbootstrapValidatorInit();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tfunction bootstrapValidatorInit(){\r\n");
      out.write("\t\t$('#form').bootstrapValidator({\r\n");
      out.write("\t\t\tmessage:'This value is not valid',\r\n");
      out.write("\t\t\tfeedbackIcons:{\r\n");
      out.write("\t\t\t\tvalid:'glyphicon glyphicon-ok',\r\n");
      out.write("\t\t\t\tinvalid:'glyphicon glyphicon-remove',\r\n");
      out.write("\t\t\t\tvalidating:'glyphicon glyphicon-refresh'\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\texcluded: [':disabled'],\r\n");
      out.write("\t\t\tfields:{// 字段验证\r\n");
      out.write("\t\t\t\toldPassword:{// 原密码\r\n");
      out.write("\t\t\t\t\tvalidators:{\r\n");
      out.write("\t\t\t\t\t\tnotEmpty:{\r\n");
      out.write("\t\t\t\t\t\t\tmessage:'输入不能为空'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tcallback:{}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tnewPassword:{// 新密码\r\n");
      out.write("\t\t\t\t\tvalidators:{\r\n");
      out.write("\t\t\t\t\t\tnotEmpty:{\r\n");
      out.write("\t\t\t\t\t\t\tmessage:'输入不能为空'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tstringLength:{\r\n");
      out.write("\t\t\t\t\t\t\tmin:6,\r\n");
      out.write("\t\t\t\t\t\t\tmax:16,\r\n");
      out.write("\t\t\t\t\t\t\tmessage:'密码长度为6~16位'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tcallback:{}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tnewPassword_re:{// 重复新密码\r\n");
      out.write("\t\t\t\t\tvalidators:{\r\n");
      out.write("\t\t\t\t\t\tnotEmpty:{\r\n");
      out.write("\t\t\t\t\t\t\tmessage:'输入不能为空'\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\tidentical:{\r\n");
      out.write("\t\t\t\t\t\t\tfield:'newPassword',\r\n");
      out.write("\t\t\t\t\t\t\tmessage:'两次密码不一致'\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.on('success.form.bv',function(e){\r\n");
      out.write("\t\t\t// 禁用默认表单提交\r\n");
      out.write("\t\t\te.preventDefault();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 获取 form 实例\r\n");
      out.write("\t\t\tvar $form = $(e.target);\r\n");
      out.write("\t\t\t// 获取 bootstrapValidator 实例\r\n");
      out.write("\t\t\tvar bv = $form.data('bootstrapValidator');\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar userID = $('#userID').html();\r\n");
      out.write("\t\t\tvar oldPassword = $('#oldPassword').val();\r\n");
      out.write("\t\t\tvar newPassword = $('#newPassword').val();\r\n");
      out.write("\t\t\tvar rePassword = $('#newPassword_re').val();\r\n");
      out.write("\r\n");
      out.write("\t\t\toldPassword = passwordEncrying(userID, oldPassword);\r\n");
      out.write("\t\t\tnewPassword = passwordEncrying(userID, newPassword);\r\n");
      out.write("\t\t\trePassword = passwordEncrying(userID, rePassword);\r\n");
      out.write("\t\t\tvar data = {\r\n");
      out.write("\t\t\t\t\t\"oldPassword\" : oldPassword,\r\n");
      out.write("\t\t\t\t\t\"newPassword\" : newPassword,\r\n");
      out.write("\t\t\t\t\t\"rePassword\" : rePassword\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 将数据通过 AJAX 发送到后端\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t\t\turl:\"account/passwordModify\",\r\n");
      out.write("\t\t\t\tdataType:\"json\",\r\n");
      out.write("\t\t\t\tcontentType:\"application/json\",\r\n");
      out.write("\t\t\t\tdata:JSON.stringify(data),\r\n");
      out.write("\t\t\t\tsuccess:function(response){\r\n");
      out.write("\t\t\t\t\t// 接收并处理后端返回的响应e'd'\r\n");
      out.write("\t\t\t\t\tif(response.result == \"error\"){\r\n");
      out.write("\t\t\t\t\t\tvar errorMessage;\r\n");
      out.write("\t\t\t\t\t\tif(response.errorMsg == \"passwordError\"){\r\n");
      out.write("\t\t\t\t\t\t\terrorMessage = \"密码错误\";\r\n");
      out.write("\t\t\t\t\t\t\tfield = \"oldPassword\"\r\n");
      out.write("\t\t\t\t\t\t}else if(response.errorMsg == \"passwordUnmatched\"){\r\n");
      out.write("\t\t\t\t\t\t\terrorMessage = \"密码不一致\";\r\n");
      out.write("\t\t\t\t\t\t\tfield = \"newPassword\"\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t$(\"#oldPassword\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#newPassword\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#newPassword_re\").val(\"\");\r\n");
      out.write("\t\t\t\t\t\tbv.updateMessage(field,'callback',errorMessage);\r\n");
      out.write("\t\t\t\t\t\tbv.updateStatus(field,'INVALID','callback');\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t// 否则更新成功，弹出模态框并清空表单\r\n");
      out.write("\t\t\t\t\t\t$('#passwordEditSuccess').modal('show');\r\n");
      out.write("\t\t\t\t\t\t$('#reset').trigger(\"click\");\r\n");
      out.write("\t\t\t\t\t\t$('#form').bootstrapValidator(\"resetForm\",true); \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(response){\r\n");
      out.write("\t\t\t\t\t//window.location.href = \"./\";\r\n");
      out.write("\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 密码加密模块\r\n");
      out.write("\tfunction passwordEncrying(userID,password){\r\n");
      out.write("\t\tvar str1 = $.md5(password);\r\n");
      out.write("\t\t//var str2 = $.md5(str1 + userID);\r\n");
      out.write("\t\treturn str1;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<!-- 修改密码面板 -->\r\n");
      out.write("<div class=\"panel panel-default\">\r\n");
      out.write("\t<!-- 面包屑 -->\r\n");
      out.write("\t<ol class=\"breadcrumb\">\r\n");
      out.write("\t\t<li>修改密码</li>\r\n");
      out.write("\t</ol>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"panel-body\">\r\n");
      out.write("\t\t<!--  修改密码主体部分 -->\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-4 col-sm-2\"></div>\r\n");
      out.write("\t\t\t<div class=\"col-md-4 col-sm-8\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<form action=\"\" class=\"form-horizontal\" style=\"\"\r\n");
      out.write("\t\t\t\t\trole=\"form\" id=\"form\">\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"\" class=\"control-label col-md-4 col-sm-4\"> 用户ID: </label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-8 col-sm-8\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"hidden\" id=\"userID\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userID }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</span>\r\n");
      out.write("\t\t\t\t\t\t\t<p class=\"form-control-static\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userID }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"\" class=\"control-label col-md-4 col-sm-4\"> 输入原密码: </label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-8 col-sm-8\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"oldPassword\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"oldPassword\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"\" class=\"control-label col-md-4 col-sm-4\"> 输入新密码: </label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-8 col-sm-8\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"newPassword\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"newPassword\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"\" class=\"control-label col-md-4 col-sm-4\"> 确认新密码: </label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-8 col-sm-8 has-feedback\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"newPassword_re\"\r\n");
      out.write("\t\t\t\t\t\t\t\tname=\"newPassword_re\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-4 col-sm-4\"></div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-4 col-sm-4\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-success\">\r\n");
      out.write("\t\t\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;确认修改&nbsp;&nbsp;&nbsp;&nbsp;</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-4 col-sm-4\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<input id=\"reset\" type=\"reset\" style=\"display:none\">\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-4 col-sm-2\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-3 col-sm-1\"></div>\r\n");
      out.write("\t\t\t<div class=\"col-md-6 col-sm-10\">\r\n");
      out.write("\t\t\t\t<div class=\"alert alert-info\" style=\"margin-top: 50px\">\r\n");
      out.write("\t\t\t\t\t<p>登录密码修改规则说明：</p>\r\n");
      out.write("\t\t\t\t\t<p>1.密码长度为6~16位，至少包含数字、字母、特殊符号中的两类，字母区分大小写</p>\r\n");
      out.write("\t\t\t\t\t<p>2.密码不可与账号相同</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-3 col-sm-1\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 更新成功模态框 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"passwordEditSuccess\"\r\n");
      out.write("\ttabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\taria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\"\r\n");
      out.write("\t\t\t\t\tdata-dismiss=\"modal\" aria-hidden=\"true\">\r\n");
      out.write("\t\t\t\t\t&times;\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\" id=\"myModalLabel\">\r\n");
      out.write("\t\t\t\t\t提示\r\n");
      out.write("\t\t\t\t</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-4\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-4\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"media/icons/success-icon.png\" alt=\"\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"width: 100px; height: 100px;\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-4\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"row\" style=\"margin-top: 10px\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-4\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-4\" style=\"text-align:center;\"><h4>密码修改成功</h4></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-4\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t<span>关闭</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
